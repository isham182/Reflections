Q. How did viewing a diff between two versions of a file help you see the bug that
was introduced?

 
A. It showed only the difference between the two files so you could pin point what was different. Making it easier when you have a lot of programming.


Q. How could having easy access to the entire history of a file make you a more 
efficient programmer in the long term?

 
A. Makes you more confident that if you mess up you have a way to get back to how you were before, easily. 



Q. What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    
A. The pros of having manual commits is you get to choose when to save. a con would be forgetting to manual save and doing too much work in between saves.


Q. Why do you think some version control systems, like Git, allow saving multiple
 files in one commit, while others, like Google Docs, 
   treat each file separately?

    
A. Git is used for programmers, so it more than likely will take multiple files together to make what you want. While others, like google docs, 
   more than likely only use one file at a time.


Q. How can you use the commands git log and git diff to view the history of files?

    
A. By using git log it shows you all the commits you have saved. you can use git diff to compare two commits to see the additions and subtractions of those commits.


Q. How might using version control make you more confident to make changes that
 could break something?

    
A. You would be less hesitant to try new things knowing that you have a back-up file and also knowing you can troubleshoot to find the problem.


Q. Now that you have your workspace set up, what do you want to try using Git for?

    
A. I want to use it with alot of work where I can save commits and not worry about the consequences if I cant remember how to get back where I was.